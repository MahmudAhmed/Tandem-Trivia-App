{"version":3,"sources":["components/display_answers.jsx","App.js","reportWebVitals.js","index.js"],"names":["DisplayAnswers","questions","idx","handleAnswerClk","question","choices","incorrect_answers","slice","push","correct_answer","sort","Math","random","className","map","option","key","onClick","dangerouslySetInnerHTML","__html","axios","require","CATAGORIES","id","category","QUESTIONS_AMOUNT","App","props","fetchQuestions","state","categoryId","questionAmount","difficulty","amount","tenQuestion","QUESTIONS","setState","get","then","data","results","displayQuestions","title","icon","faTrash","categorySelection","choice","score","gameOver","highScore","length","localStorage","setItem","displayGameScreen","faBrain","faStar","displayGameOver","faPlayCircle","newGame","handleRadioClick","e","parseInt","currentTarget","value","handleDifficultySelection","topic","num","type","name","checked","onChange","class","displayDifficulty","displayInstructions","selected","disabled","displaySocial","href","target","faLinkedin","faGithub","faMedium","getItem","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0210bf94.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction DisplayAnswers({ questions, idx, handleAnswerClk }) {\n  const question = questions[idx];\n  const choices = question.incorrect_answers.slice();\n  choices.push(question.correct_answer);\n  choices.sort(() => 0.5 - Math.random());\n  return (\n    <div className=\"answers-container\">\n      <ul className=\"choices-ul\">\n        {choices.map((option, key) => (\n          <li key={key} className=\"choices-li\">\n            <button\n              className=\"answer-btns\"\n              onClick={() => handleAnswerClk(questions, idx, option)}\n              dangerouslySetInnerHTML={{ __html: `${option}` }}\n            ></button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default DisplayAnswers;\n","import React from \"react\";\nimport \"./stylesheets/reset.css\";\nimport \"./stylesheets/App.css\";\nimport QUESTIONS from \"./Apprentice_TandemFor400_Data.json\";\nimport DisplayAnswers from \"./components/display_answers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar, faBrain, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faGithub,\n  faLinkedin,\n  faMedium\n} from \"@fortawesome/free-brands-svg-icons\";\nimport \"./stylesheets/categories.css\";\nconst axios = require(\"axios\");\n\nconst CATAGORIES = [\n  { id: 1, category: \"Tandem: Random (Max: 21)\" },\n  { id: 9, category: \"General Knowledge\" },\n  { id: 10, category: \"Entertainment: Books\" },\n  { id: 11, category: \"Entertainment: Films\" },\n  { id: 12, category: \"Entertainment: Music\" },\n  { id: 14, category: \"Entertainment: Television\" },\n  { id: 15, category: \"Entertainment: Video Games\" },\n  { id: 17, category: \"Entertainment: Science & Nature\" },\n  { id: 31, category: \"Entertainment: Japanese Anime & Manga\" },\n  { id: 20, category: \"Mythology\" },\n  { id: 21, category: \"Sports\" },\n  { id: 22, category: \"Geography\" },\n  { id: 23, category: \"History\" },\n  { id: 24, category: \"Politics\" },\n  { id: 26, category: \"Celebrities\" }\n];\n\nconst QUESTIONS_AMOUNT = [10, 20, 30, 40, 50];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoryId: 1,\n      questionAmount: 10,\n      questions: [],\n      categorySelection: true,\n      difficulty: \"\",\n      highScore: parseInt(localStorage.getItem(\"triviaScore\") || 0)\n    };\n  }\n\n  // componentDidMount = () => {\n  //   this.fetchQuestions();\n  // }\n\n  fetchQuestions = () => {\n    const { categoryId, questionAmount, difficulty } = this.state;\n    if (categoryId === 1) {\n      const shuffled = QUESTIONS.sort(() => 0.5 - Math.random());\n      let amount = questionAmount >= 21 ? 21 : questionAmount;\n      let tenQuestion = shuffled.slice(0, amount);\n      this.setState({ questions: tenQuestion });\n    } else {\n      axios\n        .get(\n          `https://opentdb.com/api.php?amount=${questionAmount}&category=${categoryId}${\n            difficulty ? `&difficulty=${difficulty}` : \"\"\n          }`\n        )\n        .then((data) => {\n          this.setState({ questions: data.data.results });\n        });\n    }\n  };\n\n  displayQuestions = () => {\n    const { questions, idx } = this.state;\n    const question = questions[idx];\n    if (!question) return null;\n    return (\n      <div className=\"question-container\">\n        <div className=\"question-details\">\n          <h4 id=\"category\">Category: \"{question.category ? question.category : \"Questions by Tandem\"}\"</h4>\n          <h4 id=\"difficulty\">Difficulty: \"{question.difficulty ? question.difficulty : \"n/a\"}\"</h4>\n        </div>\n        <div className=\"the-question\">\n          <h2 dangerouslySetInnerHTML={{ __html: `${question.question}` }}></h2>\n        </div>\n        <DisplayAnswers\n          questions={questions}\n          idx={idx}\n          handleAnswerClk={this.handleAnswerClk}\n        />\n        <div className=\"quit-container\">\n          <FontAwesomeIcon\n            id=\"trash\"\n            title=\"Start Over\"\n            icon={faTrash}\n            onClick={() => this.setState({ categorySelection: true })}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  handleAnswerClk = (questions, idx, choice) => {\n    const question = questions[idx];\n    let { score, gameOver, highScore } = this.state;\n\n    if (question.correct_answer === choice) {\n      if (question.difficulty === \"hard\") score += 8;\n      else if (question.difficulty === \"medium\") score += 6;\n      else score += 2;\n    } else {\n      score--;\n    }\n    if (idx + 1 >= questions.length) {\n      gameOver = true;\n      if (score > highScore) {\n        highScore = score;\n        localStorage.setItem(\"triviaScore\", highScore);\n      }\n    } else {\n      idx++;\n    }\n\n    this.setState({\n      score,\n      idx,\n      gameOver,\n      highScore\n    });\n  };\n\n  displayGameScreen = () => {\n    let { idx, questions, score, gameOver, categorySelection } = this.state;\n    return (\n      <div className=\"game-container\">\n        <div className=\"title-container\">\n          <div className=\"left-title-container\">\n            <FontAwesomeIcon id=\"brain\" icon={faBrain} />\n            <h1 className=\"title\">TRIVIA UNIVERSITY</h1>\n          </div>\n          {!categorySelection ? (\n            <div className=\"right-title-container\">\n              <div className=\"score-container\">\n                <FontAwesomeIcon id=\"star\" icon={faStar} />\n                <span id=\"score\">{score}</span>\n              </div>\n              <div>\n                <span>|</span>\n              </div>\n              <div className=\"pagination\">\n                <h5>\n                  # {idx + 1} / {questions.length}\n                </h5>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"middle-container\">\n          {categorySelection\n            ? this.categorySelection()\n            : !gameOver\n            ? this.displayQuestions()\n            : this.displayGameOver()}\n        </div>\n      </div>\n    );\n  };\n\n  displayGameOver = () => {\n    return (\n      <div className=\"game-over-container\">\n        <h2 id=\"game-over-text\">Play Again!</h2>\n        <div className=\"replay-container\">\n          <FontAwesomeIcon\n            id=\"restart\"\n            title=\"Play Again\"\n            icon={faPlayCircle}\n            onClick={() => this.setState({ categorySelection: true })}\n          />\n        </div>\n        <div className=\"stats-container\">\n          <span>You Scored:</span>\n          <span id=\"stats-score\">{this.state.score}</span>\n          {this.state.highScore > 0 ? (\n            <div>\n              <span>Your Highest Score:</span>\n              <span id=\"stats-score\">{this.state.highScore}</span>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  newGame = () => {\n    this.fetchQuestions();\n    this.setState({\n      gameOver: false,\n      score: 0,\n      idx: 0,\n      questionAmount: 10\n    });\n  };\n\n  handleRadioClick = (e) => {\n    this.setState({\n      questionAmount: parseInt(e.currentTarget.value)\n    });\n  };\n\n  handleDifficultySelection = (e) => {\n    this.setState({difficulty: e.currentTarget.value});\n  };\n\n  categorySelection = () => {\n    const { questionAmount } = this.state;\n    return (\n      <div className=\"category-container\">\n        <h2 id=\"category-title\">Select A Category to Begin</h2>\n        <ul className=\"category-list\">\n          {CATAGORIES.map((topic) => {\n            return (\n              <li\n                className=\"categories\"\n                onClick={() => {\n                  this.setState(\n                    { categorySelection: false, categoryId: topic.id },\n                    () => this.newGame()\n                  );\n                }}\n              >\n                {topic.category}\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"amount-container\">\n          <h2>How many questions would you like?</h2>\n          <div className=\"amount-list\">\n            {QUESTIONS_AMOUNT.map((num, idx) => {\n              return (\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"amount\"\n                    value={num}\n                    checked={questionAmount === num}\n                    onChange={this.handleRadioClick}\n                  />\n                  <span class=\"amount\">{num}</span>\n                </label>\n              );\n            })}\n          </div>\n        </div>\n        {this.displayDifficulty()}\n        {this.displayInstructions()}\n      </div>\n    );\n  };\n\n  displayDifficulty = () => {\n    return (\n      <div className=\"difficulty-container\">\n        {/* <label for=\"difficulty\">Choose a difficulty:</label> */}\n        <select\n          name=\"dificulty\"\n          id=\"difficulty-list\"\n          onChange={this.handleDifficultySelection}\n        >\n          <option selected disabled>Choose a difficulty</option>\n          <option value=\"\">Random (Default)</option>\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n        \n      </div>\n    );\n  };\n\n  displaySocial = () => {\n    return (\n      <div class=\"social-icon-container\">\n        <a href=\"https://www.linkedin.com/in/mahmud-ahmed/\" target=\"_black\">\n          <FontAwesomeIcon className=\"social-icons\" icon={faLinkedin} />\n        </a>\n        <a href=\"https://github.com/mahmudahmed\" target=\"_black\">\n          <FontAwesomeIcon className=\"social-icons\" icon={faGithub} />\n        </a>\n        <a href=\"https://medium.com/@moe.purplefox\" target=\"_black\">\n          <FontAwesomeIcon className=\"social-icons\" icon={faMedium} />\n        </a>\n      </div>\n    )\n  }\n\n  displayInstructions = () => {\n    return (\n      <div className={\"instruction-container\"}>\n        <h2>Scoring:</h2>\n        <ul id=\"scoring\">\n          <li className=\"scoring-li\">Easy => <span className=\"plus\">+2pts</span> </li>\n          <li className=\"scoring-li\">Medium => <span className=\"plus\">+4pts</span> </li>\n          <li className=\"scoring-li\">Hard => <span className=\"plus\">+8pts</span> </li>\n        </ul>\n        <p id=\"warning-wrong\">Wrong answers will cost you <span className=\"minus\">-1pt</span></p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        {this.displayGameScreen()}\n        {this.displaySocial()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}